name: Deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - name: Build and Publish
      run: |
        set -e 
        
        echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

        yarn
        yarn build

        export IS_NEXT=$(node -e "console.log(require('./package.json').version.includes('-'))")

        if [ "$IS_NEXT" = "true" ]; then
          export VERSION=$(node -e "console.log(require('./package.json').version.split('-')[0].replaceAll('.', '-'))")
          aws s3 cp ./dist/umd/index.js s3://alshdavid-public/rpc/next.js
          aws s3 cp ./dist/umd/index.js s3://alshdavid-public/rpc/next/${VERSION}.js
          aws cloudfront create-invalidation --distribution-id E2QHY39OWRUCEU --paths /next.js
          npm publish --access public --tag next
        else
          export VERSION=$(node -e "console.log(require('./package.json').version.replaceAll('.', '-'))")
          aws s3 cp ./dist/umd/index.js s3://alshdavid-public/rpc/latest.js
          aws s3 cp ./dist/umd/index.js "s3://alshdavid-public/rpc/${VERSION}.js"
          aws cloudfront create-invalidation --distribution-id E2QHY39OWRUCEU --paths /latest.js
          npm publish --access public
        fi       
      env:
        CI: true
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}